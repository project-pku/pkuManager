using pkuManager.Alerts;
using System;
using System.Drawing;
using System.Windows.Forms;

namespace pkuManager.GUI;

/// <summary>
/// A GUI container for basic Alerts. To be used in conjunction with the porter windows.
/// </summary>
public class AlertBox : Panel
{
    protected Label titleLabel;
    protected RichTextBox messageTextbox;

    private const int MAGIC_CONST = 25;
    private const int MAGIC_CONST_2 = 15;

    // Creates a new AlertBox (which is just a pre-formatted Panel)
    public AlertBox(Alert alert, int containerWidth)
    {
        titleLabel = new();
        messageTextbox = newRichTextBox(alert.Message, containerWidth - MAGIC_CONST);

        Controls.Add(titleLabel);
        Controls.Add(messageTextbox);

        MinimumSize = new(0, 10); //30 height
        MaximumSize = new(containerWidth - MAGIC_CONST, 0);
        BorderStyle = BorderStyle.FixedSingle;
        AutoSize = true;

        titleLabel.Location = new(4, 4);
        titleLabel.MaximumSize = new(0, 15);
        titleLabel.MinimumSize = new(0, 15);
        titleLabel.Text = alert.Title;
        titleLabel.Font = new(titleLabel.Font, FontStyle.Bold);
        titleLabel.Width = titleLabel.PreferredWidth;

        messageTextbox.Location = new(7, 20);
    }

    // Creates a textbox formatted to look like a warning/error box
    protected static TextBox newTextBox(string text, int alertBoxWidth)
    {
        TextBox tb = new();
        tb.TextChanged += new(textBox_TextChanged);
        tb.MaximumSize = new(alertBoxWidth - MAGIC_CONST_2, 0);
        tb.MinimumSize = new(alertBoxWidth - MAGIC_CONST_2, 10);
        tb.Text = text;
        tb.Multiline = true;
        tb.BorderStyle = BorderStyle.None;

        return tb;
    }

    // Creates a richtextbox formatted to look like a warning/error box
    protected static RichTextBox newRichTextBox(string text, int alertBoxWidth)
    {
        TextBox test = newTextBox(text, alertBoxWidth);

        RichTextBox tb = new();
        tb.Text = text;
        tb.BorderStyle = BorderStyle.None;
        tb.TabStop = false;
        tb.ReadOnly = true;
        tb.Multiline = true;
        tb.Size = test.Size;

        return tb;
    }

    // Event handler for when a textbox (generated by newTextBox) is updated (i.e. resizes to fit new text).
    protected static void textBox_TextChanged(object sender, EventArgs e)
    {
        TextBox tb = sender as TextBox;
        Size size = TextRenderer.MeasureText(tb.Text, tb.Font, tb.MaximumSize, TextFormatFlags.WordBreak);
        tb.Height = size.Height;
    }
}