//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pkuManager.WinForms.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("pkuManager.WinForms.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap checkedOut {
            get {
                object obj = ResourceManager.GetObject("checkedOut", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None / Pal Park / Egg
        ///Rock Smash (HGSS) / Rock Smash
        ///Tall Grass / Newmoon Island
        ///
        ///Dialga/Palkia / Spear Pillar
        ///Cave/Hall of Origin / Cave / Hall of Origin
        ///
        ///Surfing/Fishing / Surfing / Fishing
        ///
        ///Building/Enigma Stone / Building / Enigma Stone
        ///Marsh/Safari / Marsh
        ///
        ///Starter/Fossil/Gift (DP) / Starter (DP/HGSS) / Fossil (DP) / Gift (DP)
        ///JUMP TO / 23
        ///Distortion World (Pt) / Distortion World
        ///Starter/Fossil/Gift (Pt/DP Trio) / Starter (Pt) / Fossil (Pt/HGSS) / Gift (Pt/HGSS) / Sinjoh Ruins.
        /// </summary>
        internal static string EncounterTypesENG {
            get {
                return ResourceManager.GetString("EncounterTypesENG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None
        ///Sapphire
        ///Ruby
        ///Emerald
        ///FireRed
        ///LeafGreen
        ///
        ///HeartGold
        ///SoulSilver
        ///
        ///Diamond
        ///Pearl
        ///Platinum
        ///
        ///
        ///Colosseum / XD
        ///
        ///
        ///
        ///
        ///White
        ///Black
        ///White 2
        ///Black 2
        ///X
        ///Y
        ///Alpha Sapphire
        ///Omega Ruby
        ///
        ///
        ///Sun
        ///Moon
        ///Ultra Sun
        ///Ultra Moon
        ///Pokemon GO
        ///Red
        ///Blue / Green
        ///Blue(JP)
        ///Yellow
        ///Gold
        ///Silver
        ///Crystal
        ///Let&apos;s Go, Pikachu!
        ///Let&apos;s Go, Eevee!
        ///Sword
        ///Shield.
        /// </summary>
        internal static string Games {
            get {
                return ResourceManager.GetString("Games", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Red / Blue / Green / Blue(JP) / Yellow
        ///Gold / Silver / Crystal
        ///Sapphire / Ruby / Emerald / FireRed / LeafGreen
        ///Colosseum
        ///XD
        ///Diamond / Pearl / Platinum / HeartGold / SoulSilver
        ///Battle Revolution
        ///White / Black / White 2 / Black 2
        ///X / Y / Alpha Sapphire / Omega Ruby
        ///Sun / Moon / Ultra Sun / Ultra Moon
        ///Let&apos;s Go, Pikachu! / Let&apos;s Go, Eevee!
        ///Sword / Shield.
        /// </summary>
        internal static string GamesToFormat {
            get {
                return ResourceManager.GetString("GamesToFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Base&quot;: {
        ///        &quot;253&quot;: &quot;(gift-egg)&quot;, //location for gift eggs before they are hatched
        ///        &quot;254&quot;: &quot;(in-game trade)&quot;,
        ///        &quot;255&quot;: &quot;(fateful encounter)&quot; //not the same as fateful encounter in later gens, think of it as &quot;Received in an Event&quot;.
        ///    },
        ///    &quot;RS&quot;: {
        ///        &quot;0&quot;: &quot;Littleroot Town&quot;,
        ///        &quot;1&quot;: &quot;Oldale Town&quot;,
        ///        &quot;2&quot;: &quot;Dewford Town&quot;,
        ///        &quot;3&quot;: &quot;Lavaridge Town&quot;,
        ///        &quot;4&quot;: &quot;Fallarbor Town&quot;,
        ///        &quot;5&quot;: &quot;Verdanturf Town&quot;,
        ///        &quot;6&quot;: &quot;Pacifidlog Town&quot;,
        ///        &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string gen3Locations {
            get {
                return ResourceManager.GetString("gen3Locations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap grassbox {
            get {
                object obj = ResourceManager.GetObject("grassbox", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    // Pokemon from gens 1-8
        ///    // Gender difference tags (e.g. male and female Pikachu have different looking tails, but all Bulbasaur look the same).
        ///    //      TODO: Might have to rework above to be form dependent. Mega Venasaur has gender differences
        ///    //      but Mega Blaziken doesn&apos;t deaspite normal Blaziken having them...
        ///    // Default form tags (e.g. Shaymin Land form is default, but Giratina&apos;s Origin form isn&apos;t)
        ///    // Explicit on Import tags (e.g. want an Unown-A to be explictly liste [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nationaldexData {
            get {
                return ResourceManager.GetString("nationaldexData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon pc {
            get {
                object obj = ResourceManager.GetObject("pc", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Ability Data For Generation 3 GBA Games
        ///// Pulled from Pokemon Emerald (ENG) ROM starting at Address 0x3203E8
        ///// See: https://bulbapedia.bulbagarden.net/wiki/Pok%C3%A9mon_species_data_structure_(Generation_III)
        /////
        ///// Format is as follows:
        ///// &quot;National Dex #&quot;: {
        /////    &quot;1&quot;: Slot 1 Ability ID
        /////    &quot;2&quot;: Slot 2 Ability ID //Only if Slot 2 exists
        ///// }
        ///// For ability ID&apos;s, see: https://bulbapedia.bulbagarden.net/wiki/Ability#List_of_Abilities
        ///{
        ///    &quot;1&quot;: {
        ///        &quot;1&quot;: 65
        ///    },
        ///    &quot;2&quot;: {
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pk3Abilities {
            get {
                return ResourceManager.GetString("pk3Abilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    // See https://bulbapedia.bulbagarden.net/wiki/Character_encoding_(Generation_III) for more info.
        ///    //
        ///    // The phrase &quot;Unicode used in Gen 5&quot; means that the unicode character used is the same one used by the Gen 5 games.
        ///    // We use these chars to represent equivalent chars in the gen 3/4 games to maintain consistency.
        ///    &quot;International&quot;: {
        ///        &quot;0&quot;: &quot; &quot;,
        ///        &quot;1&quot;: &quot;À&quot;,
        ///        &quot;2&quot;: &quot;Á&quot;,
        ///        &quot;3&quot;: &quot;Â&quot;,
        ///        &quot;4&quot;: &quot;Ç&quot;,
        ///        &quot;5&quot;: &quot;È&quot;,
        ///        &quot;6&quot;: &quot;É&quot;,
        ///        &quot;7&quot;: &quot;Ê&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pk3CharEncoding {
            get {
                return ResourceManager.GetString("pk3CharEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //Can probably delete since forms are now defined in the natdex... wait but what gen the forms are in are not in nat dex...
        ///{
        ///    &quot;201&quot;: [ &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;, &quot;!&quot;, &quot;?&quot; ],
        ///    &quot;351&quot;: [ &quot;Normal&quot;, &quot;Sunny&quot;, &quot;Rainy&quot;, &quot;Snowy&quot;],
        ///    &quot;386&quot;: [ &quot;Normal&quot;, &quot;Attack&quot;, &quot;Defense&quot;, &quot;Speed&quot;]
        ///}.
        /// </summary>
        internal static string pk3Forms {
            get {
                return ResourceManager.GetString("pk3Forms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blue Master Ball
        ///Master Ball
        ///Ultra Ball
        ///Great Ball
        ///Poke Ball / Poké Ball / Pokeball
        ///Safari Ball
        ///Net Ball
        ///Dive Ball
        ///Nest Ball
        ///Repeat Ball
        ///Timer Ball
        ///Luxury Ball
        ///Premier Ball
        ///Dusk Ball
        ///Heal Ball
        ///Quick Ball
        ///Cherish Ball
        ///Fast Ball
        ///Level Ball
        ///Lure Ball
        ///Heavy Ball
        ///Love Ball
        ///Friend Ball
        ///Sport Ball.
        /// </summary>
        internal static string pk4BallsENG {
            get {
                return ResourceManager.GetString("pk4BallsENG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JUMP TO / 172
        ///Normal / Spiky-eared
        ///JUMP TO / 201
        ///A / B / C / D / F / G / H / I / J / K / L / M / N / O / P / Q / R / S / T / U / V / W / X / Y / Z / ! / ?
        ///JUMP TO / 386
        ///Normal / Attack / Defense / Speed
        ///JUMP TO / 412
        ///Plant Cloak / Sandy Cloak / Trash Cloak
        ///Plant Cloak / Sandy Cloak / Trash Cloak
        ///JUMP TO / 422
        ///West Sea / East Sea
        ///JUMP TO / 479
        ///Normal / Heat / Wash / Frost / Fan / Mow
        ///JUMP TO / 487
        ///Altered / Origin
        ///JUMP TO / 492
        ///Land / Sky
        ///JUMP TO / 493
        ///Normal / Fighting / Flying / Poison /  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pk4FormsENG {
            get {
                return ResourceManager.GetString("pk4FormsENG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None
        ///Master Ball
        ///Ultra Ball
        ///Great Ball
        ///Poké Ball / PokéBall / Poke Ball / PokeBall
        ///Safari Ball
        ///Net Ball
        ///Dive Ball
        ///Nest Ball
        ///Repeat Ball
        ///Timer Ball
        ///Luxury Ball
        ///Premier Ball
        ///Dusk Ball
        ///Heal Ball
        ///Quick Ball
        ///Cherish Ball
        ///Potion
        ///Antidote
        ///Burn Heal
        ///Ice Heal
        ///Awakening
        ///Parlyz Heal
        ///Full Restore
        ///Max Potion
        ///Hyper Potion
        ///Super Potion
        ///Full Heal
        ///Revive
        ///Max Revive
        ///Fresh Water
        ///Soda Pop
        ///Lemonade
        ///Moomoo Milk
        ///EnergyPowder
        ///Energy Root
        ///Heal Powder
        ///Revival Herb
        ///Ether
        ///Max Ether
        ///Elixir
        ///Max E [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pk4ItemsENG {
            get {
                return ResourceManager.GetString("pk4ItemsENG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mystery Zone (Map)
        ///Twinleaf Town
        ///Sandgem Town
        ///Floaroma Town
        ///Solaceon Town
        ///Celestic Town
        ///Jubilife City
        ///Canalave City
        ///Oreburgh City
        ///Eterna City
        ///Hearthome City
        ///Pastoria City
        ///Veilstone City
        ///Sunyshore City
        ///Snowpoint City
        ///Pokémon League
        ///Route 201
        ///Route 202
        ///Route 203
        ///Route 204
        ///Route 205
        ///Route 206
        ///Route 207
        ///Route 208
        ///Route 209
        ///Route 210
        ///Route 211
        ///Route 212
        ///Route 213
        ///Route 214
        ///Route 215
        ///Route 216
        ///Route 217
        ///Route 218
        ///Route 219
        ///Route 220
        ///Route 221
        ///Route 222
        ///Route 223
        ///Route 224
        ///R [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pk4Locations {
            get {
                return ResourceManager.GetString("pk4Locations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon pkuicon {
            get {
                object obj = ResourceManager.GetObject("pkuicon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;UFO&quot;: {
        ///        // Doesn&apos;t have dex number, don&apos;t include it
        ///        &quot;Forms&quot;: {
        ///            &quot;Form 1&quot;: {
        ///                &quot;Default&quot;: true,
        ///                &quot;Gen 5 Index&quot;: 652,
        ///                &quot;Languages&quot;: {
        ///                    &quot;English&quot;: &quot;Form 1&quot; // For display/translating purposes only
        ///                }
        ///            },
        ///            &quot;Prop 1&quot;: { //Prop U1
        ///                //don&apos;t include &quot;Default&quot;: false, less clutter
        ///                &quot;Gen 5 Index&quot;: 664,
        ///                &quot;Suspended&quot;:  true, //wh [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pokestarData {
            get {
                return ResourceManager.GetString("pokestarData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JUMP TO / -49
        ///Cool G3
        ///Cool Super G3
        ///Cool Hyper G3
        ///Cool Master G3
        ///Beauty G3
        ///Beauty Super G3
        ///Beauty Hyper G3
        ///Beauty Master G3
        ///Cute G3
        ///Cute Super G3
        ///Cute Hyper G3
        ///Cute Master G3
        ///Smart G3 / Clever G3
        ///Smart Super G3 / Clever Super G3 
        ///Smart Hyper G3 / Clever Hyper G3
        ///Smart Master G3 / Clever Master G3
        ///Tough G3
        ///Tough Super G3
        ///Tough Hyper G3
        ///Tough Master G3
        ///Cool G4
        ///Cool Great G4
        ///Cool Ultra G4
        ///Cool Master G4
        ///Beauty G4
        ///Beauty Great G4
        ///Beauty Ultra G4
        ///Beauty Master G4
        ///Cute G4
        ///Cute Great  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Ribbons {
            get {
                return ResourceManager.GetString("Ribbons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap selection {
            get {
                object obj = ResourceManager.GetObject("selection", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap shadowbg {
            get {
                object obj = ResourceManager.GetObject("shadowbg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap shadowbgx2 {
            get {
                object obj = ResourceManager.GetObject("shadowbgx2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }

        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap mew2
        {
            get
            {
                object obj = ResourceManager.GetObject("mew2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }

        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap logo
        {
            get
            {
                object obj = ResourceManager.GetObject("logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to //Updated 6/21/21
        ///{
        ///    &quot;moves&quot;: [
        ///        &quot;10,000,000 Volt Thunderbolt&quot;,
        ///        &quot;Absorb&quot;,
        ///        &quot;Accelerock&quot;,
        ///        &quot;Acid&quot;,
        ///        &quot;Acid Armor&quot;,
        ///        &quot;Acid Downpour&quot;,
        ///        &quot;Acid Spray&quot;,
        ///        &quot;Acrobatics&quot;,
        ///        &quot;Acupressure&quot;,
        ///        &quot;Aerial Ace&quot;,
        ///        &quot;Aeroblast&quot;,
        ///        &quot;After You&quot;,
        ///        &quot;Agility&quot;,
        ///        &quot;Air Cutter&quot;,
        ///        &quot;Air Slash&quot;,
        ///        &quot;All-Out Pummeling&quot;,
        ///        &quot;Ally Switch&quot;,
        ///        &quot;Amnesia&quot;,
        ///        &quot;Anchor Shot&quot;,
        ///        &quot;Ancient Power&quot;,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string showdownData {
            get {
                return ResourceManager.GetString("showdownData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    // This json file is associates a species&apos; canonical PKU form name, with their Showdown form species name.
        ///    // For example the Sinnoh Cap Pikachu form is denoted &quot;Sinnoh Cap&quot; by PKU, but in Showdown the species is: &quot;Pikachu-Sinnoh&quot;.
        ///    // The corresponding json entry is given by:
        ///    // ------------------------------------------
        ///    // &quot;Pikachu&quot;: {
        ///    //     &quot;Forms&quot;: {
        ///    //      &quot;Sinnoh Cap&quot;: {
        ///    //          &quot;Showdown-Species&quot;: &quot;Pikachu-Sinnoh&quot;
        ///    //      },
        ///    // }
        ///    // ------ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string showdownSpecies {
            get {
                return ResourceManager.GetString("showdownSpecies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap unknown {
            get {
                object obj = ResourceManager.GetObject("unknown", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap unknown_box {
            get {
                object obj = ResourceManager.GetObject("unknown_box", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
